Description: Adjusts the compiler flags to enable the hardening and link to the system libraries
Author: Emmanuel Bourg <ebourg@apache.org>
Forwarded: no
--- a/buildSrc/linux.gradle
+++ b/buildSrc/linux.gradle
@@ -44,8 +44,12 @@
 def commonFlags = [
         "-fno-strict-aliasing", "-fPIC", "-fno-omit-frame-pointer", // optimization flags
         "-fstack-protector",
+        "-Wno-error=cast-function-type",
         "-Wextra", "-Wall", "-Wformat-security", "-Wno-unused", "-Wno-parentheses", "-Werror=trampolines"] // warning flags
 
+commonFlags.addAll("dpkg-buildflags --get CPPFLAGS  ".execute().text.trim().split(" "))
+commonFlags.addAll("dpkg-buildflags --get CXXFLAGS".execute().text.trim().split(" "))
+
 if (!IS_64) {
     commonFlags += "-m32"
 }
@@ -64,9 +68,12 @@
 
 def ccFlagsGTK3 = cppFlags
 //ccFlags.addAll(["-Wnon-virtual-dtor", "-Woverloaded-virtual", "-std=c++0x"])
+cppFlags.addAll("dpkg-buildflags --get CPPFLAGS  ".execute().text.trim().split(" "))
+cppFlags.addAll("dpkg-buildflags --get CXXFLAGS".execute().text.trim().split(" "))
 def dynamicLinkFlags = ["-static-libgcc", "-static-libstdc++", "-shared", commonFlags,
                  "-z", "relro",
                  "-Wl,--gc-sections"].flatten()
+dynamicLinkFlags.addAll("dpkg-buildflags --get LDFLAGS".execute().text.trim().split(" "))
 
 def staticLinkFlags = [].flatten()
 
@@ -301,7 +308,7 @@
 LINUX.iio.compiler = compiler
 LINUX.iio.ccFlags = [cFlags].flatten()
 LINUX.iio.linker = linker
-LINUX.iio.linkFlags = [linkFlags].flatten()
+LINUX.iio.linkFlags = [linkFlags, "-ljpeg"].flatten()
 LINUX.iio.lib = "javafx_iio"
 
 LINUX.prismES2 = [:]
--- a/modules/javafx.media/src/main/native/gstreamer/projects/linux/avplugin/Makefile
+++ b/modules/javafx.media/src/main/native/gstreamer/projects/linux/avplugin/Makefile
@@ -32,11 +32,9 @@
          -DGSTREAMER_LITE \
          -ffunction-sections -fdata-sections
 
-ifeq ($(BUILD_TYPE), Release)
-    CFLAGS += -Os
-else
-    CFLAGS += -g -Wall
-endif
+CFLAGS  += $(shell dpkg-buildflags --get CPPFLAGS)
+CFLAGS  += $(shell dpkg-buildflags --get CFLAGS) -Wall
+LDFLAGS += $(shell dpkg-buildflags --get LDFLAGS)
 
 PACKAGES_INCLUDES := $(shell pkg-config --cflags glib-2.0)
 PACKAGES_LIBS     := $(shell pkg-config --libs glib-2.0 gobject-2.0)
--- a/modules/javafx.media/src/main/native/gstreamer/projects/linux/fxplugins/Makefile
+++ b/modules/javafx.media/src/main/native/gstreamer/projects/linux/fxplugins/Makefile
@@ -33,12 +33,9 @@
          -DGSTREAMER_LITE \
          -ffunction-sections -fdata-sections
 
-ifeq ($(BUILD_TYPE), Release)
-    CFLAGS += -Os
-else
-    CFLAGS += -g -Wall
-endif
-
+CFLAGS  += $(shell dpkg-buildflags --get CPPFLAGS)
+CFLAGS  += $(shell dpkg-buildflags --get CFLAGS) -Wall
+LDFLAGS += $(shell dpkg-buildflags --get LDFLAGS)
 
 INCLUDES = -I$(SRCBASE_DIR) \
 	   $(addprefix -I$(SRCBASE_DIR)/,$(DIRLIST)) \
--- a/modules/javafx.media/src/main/native/gstreamer/projects/linux/gstreamer-lite/Makefile
+++ b/modules/javafx.media/src/main/native/gstreamer/projects/linux/gstreamer-lite/Makefile
@@ -54,11 +54,9 @@
         -DGST_DISABLE_LOADSAVE  \
         -ffunction-sections -fdata-sections
 
-ifeq ($(BUILD_TYPE), Release)
-    CFLAGS += -Os
-else
-    CFLAGS += -g -Wall
-endif
+CFLAGS  += $(shell dpkg-buildflags --get CPPFLAGS)
+CFLAGS  += $(shell dpkg-buildflags --get CFLAGS) -Wall
+LDFLAGS += $(shell dpkg-buildflags --get LDFLAGS)
 
 INCLUDES = -I$(BASE_DIR)/plugins                          \
 	   -I$(SRCBASE_DIR)/projects/build/linux/common   \
--- a/modules/javafx.media/src/main/native/jfxmedia/projects/linux/Makefile
+++ b/modules/javafx.media/src/main/native/jfxmedia/projects/linux/Makefile
@@ -65,11 +65,9 @@
 	LDFLAGS = -Wl,-rpath,\$$ORIGIN -L$(BUILD_DIR) $(EXTRA_LDFLAGS)
 endif
 
-ifeq ($(BUILD_TYPE), Release)
-	CFLAGS += -Os
-else
-	CFLAGS += -g -Wall -D_DEBUG
-endif
+CFLAGS  += $(shell dpkg-buildflags --get CPPFLAGS)
+CFLAGS  += $(shell dpkg-buildflags --get CFLAGS) -Wall
+LDFLAGS += $(shell dpkg-buildflags --get LDFLAGS)
 
 ifeq ($(ARCH), x32)
     CFLAGS += -m32
